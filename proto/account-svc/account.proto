syntax = "proto3";

option go_package = "github.com/begmaroman/go-micro-boilerplate/proto/account-svc;accountproto";

package accountproto;

import "google/protobuf/empty.proto";
import "github.com/begmaroman/go-micro-boilerplate/proto/health/health.proto";
import "github.com/begmaroman/go-micro-boilerplate/proto/status/status.proto";

service AccountService {
    rpc Health(google.protobuf.Empty) returns (health.HealthResponse) {}
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // User CRUD operations
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
    rpc ReadUser(ReadUserRequest) returns (ReadUserResponse) {}
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
}

// CreateUser operation
message CreateUserRequest {
    User user = 1;
}

message CreateUserResponse {
    optional Status error = 1;
    optional User user = 2;
}

// ReadUser operation
message ReadUserRequest {
    string user_id = 1;
}

message ReadUserResponse {
    optional Status error = 1;
    optional User user = 2;
}

// ListUsers operation
message ListUsersRequest {}

message ListUsersResponseOK {
    repeated User users = 1;
}

message ListUsersResponse {
    optional Status error = 1;
    optional ListUsersResponseOK data = 2;
}

// UpdateUserAttributes operation
message UpdateUserRequest {
    string user_id = 1;
    User user = 2;
}

message UpdateUserResponse {
    optional Status error = 1;
    optional User user = 2;
}

// DeleteUser operation
message DeleteUserRequest {
    string user_id = 1;
}

message DeleteUserResponse {
    optional Status error = 1;
}
message User {
    string id = 1;
    string name = 2;
    uint64 updated_at = 3;
    uint64 created_at = 4;
}
